# __author__ = 'Политко Виктор Дмитриевич'

# Easy



# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format()


# fruits = ["яблоко", "банан", "киви", "арбуз"]
# fruits2 = len(fruits)
# for i in range(fruits2):
#     print(str(i + 1) + '.' + '{}'.format(fruits[i]))

# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.


# a = {'1', '2', '3', '4', '5', '6'}
# b = {'1', '2', '3', '4'}
# c = a - b
# print(list(c))


# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.
#
# a = [1, 6, 11, 3, 9, 7, 8, 2, 4]
# b = []
# for i in range(c):
#  if a[i] % 2 == 0:
#   b.append(a[i] / 4)
#  else:
#   b.append(a[i] * 2)
# print(b)


# Normal

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

# import math
#
# a = [2,6,8,20,9, -25, 4, 10]
# b = []
# for i in (a):
#  if i > 0 and math.sqrt(i) % 1 == 0:
#   b.append(int(math.sqrt(i)))
# print(b)

# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)


# data = '02.11.2013'
# data_spisok = data.split('.')

# years = {
# '01': '2000', '02': '2001', '03': '2002', '04': '2003', '05': '2004',
# '06': '2005', '07': '2006', '08': '2007', '09': '2008', '10': '2009',
# '11': '2010', '12': '2011', '13': '2012', '14': '2013', '15': '2014',
# '16': '2015', '17': '2016', '18': '2017', '19': '2018', '20': '2019',
# '21': '2020'
# }

# months = {
# '01': 'января',
# '02': 'февраля',
# '03': 'марта',
# '04': 'апреля',
# '05': 'мая',
# '06': 'июня',
# '07': 'июля',
# '08': 'августа',
# '09': 'сентября',
# '10': 'октября',
# '11': 'ноября',
# '12': 'декабря',
# }

# days = {
# '01': 'первое', '02': 'второе', '03': 'третье', '04': 'четвертое', '05': 'пятое',
# '06': 'шестое', '07': 'седьмое', '08': 'восьмое', '09': 'девятое', '10': 'десятое',
# '11': 'одиннадцатое', '12': 'двенадцатое', '13': 'тринадцатое', '14': 'четырнадцатое', '15': 'пятнадцатое',
# '16': 'шестнадцатое', '17': 'семнадцатое', '18': 'восемнадцатое', '19': 'девятнадцатое', '20': 'двадцатое',
# '21': 'двадцать первое', '22': 'двадцать второе', '23': 'двадцать третье', '24': 'двадцать четвертое',
# '25': 'двадцать пятое', '26': 'двадцать шестое', '27': 'двадцать седьмое', '28': 'двадцать восьмое',
# '29': 'двадцать девятое', '30': 'тридцатое', '31': 'тридцать первое',
# }
# for key in days:
#   if data_spisok[0] == key:
#    data_spisok[0] = days[key]

# for key in months:
#   if data_spisok[1] == key:
#    data_spisok[1] = months[key]


# for key in years:
#   if data_spisok[2] == key:
#    data_spisok[2] = years[key]

# itog = data_spisok[0] + ' ' + data_spisok[1] + ' ' + data_spisok[2] + ' ' "года"
# print(itog)




# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

import random
a = int(input("Введите любое целое число,\nи программа выведет рандомные числа именно столько раз :" ))
a_list = []
for i in range(a):
   a_list.append(random.randint(-100, 100))
print(a_list)




# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

#  a)
a = [1,5,10,123,14,17,19,80,54,30,71,71,10,5]
b = set(a)
print(b)

# б)
a = [1,5,10,123,14,17,19,80,54,30,71,71,10,5]
c = []
for i in a:
 if a.count(i) == 1:
  c.append(i)
print(c)


# Hard
 # Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.
# equation = 'y = -12x + 11111140.2121'
# x = 2.5
# вычислите и выведите y

equation = 'y = -12x + 11111140.2121'
x = 2.5
a = equation.split(' ')
b = str(a[2])
a[2] = b[:-1]
c = float(a[2]) * x + float(a[4])
print(c)


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
# date = '01.11.1985'

# Примеры некорректных дат
# date = '01.22.1001'
# date = '1.12.1001'
# date = '-2.10.3001'

data = input('Введите дату через точку: ')
data2 = data.split('.')
day = int(data2[0])
month = int(data2[1])
year = int(data2[2])
month_spisok = [1, 3, 5, 7, 8, 10, 12]
if len(data2[0]) != 2 or len(data2[1]) != 2 or len(data2[2]) != 4:
 print('Не верный формат даты')
elif day > 31 or day < 1:
 print('Введён не корректный день')
elif month > 12 or month < 1:
 print('Введён не корректный месяц')
elif year > 9999 or year < 1:
 print('Введён не корректный год')
elif month not in month_spisok and day > 30:
 print('Введён не корректный день')
else:
 print('Дата введена корректно: ', data)

# Взял формат 30 дней, поэтому исключил февраль и все месяца с 31 днем.